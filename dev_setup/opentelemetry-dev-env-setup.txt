-----------------------------------------
Host System setup
-----------------------------------------
Installs:
 - git							https://git-scm.com/download/win
 - docker (Docker Desktop)		https://www.docker.com/products/docker-desktop
 - Pycharm						https://www.jetbrains.com/pycharm/download/#section=windows
 - Cmder console emulator		https://cmder.net/
 - Notepad++					https://notepad-plus-plus.org/downloads/


Configs:

Docker for Desktop:
 - Expose daemon on tcp://localhost:2375 without TLS so that Pycharm can access it

Pycharm (my documents / pycharm_settings.zip)
 - Settings / Keymap / Window / Editor Tabs / Close --> Ctrl+W  
 - Settings / Editor / Code Style / Python / Wrapping and Braces / Hard wrap at: 79
 - Settings / Editor / General / Move code fragments with drag-and-drop [ ]
 - Settings / Tools / External Tools
    - Black (https://black.readthedocs.io/en/stable/editor_integration.html)
       - Program: C:\Users\robwk\PycharmProjects\openTelemetry\.venv\dev_reqs\Scripts\black.exe
       - Args: --config $ProjectFileDir$/src/opentelemetry-python/pyproject.toml $ProjectFileDir$/src/opentelemetry-python/
       - Working dir: C:\Users\robwk\PycharmProjects\openTelemetry\.venv\dev_reqs\Scripts
    - Pylint (https://www.jetbrains.com/help/pycharm/configuring-third-party-tools.html)
       - Program: docker
       - Args: run --rm -v "//c/Users/robwk/PycharmProjects/openTelemetry/src/opentelemetry-python:/opentelemetry-python" dev/otel/pylint:python3 /pylint-path-fix.sh $FileDirRelativeToProjectRoot$
       - Working dir: C:\Users\robwk\PycharmProjects\openTelemetry\.venv\dev_reqs\Scripts

Cmder (my documents / cmder_settings.xml)
 - Startup
   - Tasks, new:
     - name: {git::bash}
	 - command: "C:\Program Files\Git\bin\sh.exe" -l -new_console:d:%USERPROFILE%
   - Startup option: Specified named task: {git::bash}
 - General:
   - Size & Pos:
	 - Long console output: 10000
   - Appearance:
     - Scrollbar: show

-----------------------------------------
Git checkouts
-----------------------------------------

mkdir opentelemetry
cd opentelemetry
git clone https://github.com/robwknox/opentelemetry-python-devenv.git

mkdir src/opentelemetry-python
cd src/opentelemetry-python
git clone https://github.com/open-telemetry/opentelemetry-python

mkdir opentelemetry-python-contrib
cd opentelemetry-python-contrib/
git clone https://github.com/open-telemetry/opentelemetry-python-contrib.git
git co 5c9e043d6921550d82668788e3758a733fb11cb8

-----------------------------------------
Host System - python
-----------------------------------------

cd ~/PycharmProjects/opentelemetry/
python -m venv .venv/dev_reqs
.venv/dev_reqs/Scripts/pip install -r ~/PycharmProjects/opentelemetry/local-dev-requirements.txt

-----------------------------------------
Docker images / docker compose
-----------------------------------------
Refer to docker/
Images:
 - dev/otel/test-suite:all                  used to do manual (not through IDE) full tox runs against all python versions
 - dev/otel/all/install:{python_ver}        all OTEL pkgs installed via "eachdist.py install". Useful for when autocompletion
                                            off OTEL packages is needed or debugging
 - dev/otel/pylint:python3                  for wiring up to IDE for linting
 - dev/otel/exporter/zipkin|otlp            for debugging against specific exporters

Example:
docker run -it --rm
 -v "//c/Users/robwk/PycharmProjects/openTelemetry/src/opentelemetry-python/opentelemetry-sdk:/opentelemetry-python/opentelemetry-sdk"
 -v "//c/Users/robwk/PycharmProjects/openTelemetry/src/opentelemetry-python/opentelemetry-api:/opentelemetry-python/opentelemetry-api"
 -v "//c/Users/robwk/PycharmProjects/openTelemetry/src/opentelemetry-python/opentelemetry-python-contrib:/opentelemetry-python/opentelemetry-python-contrib"
 -v "//c/Users/robwk/PycharmProjects/openTelemetry/src/opentelemetry-python/exporter:/opentelemetry-python/exporter"
 -v "//c/Users/robwk/PycharmProjects/openTelemetry/src/opentelemetry-python/pyproject.toml:/opentelemetry-python/pyproject.toml"
 -v "//c/Users/robwk/PycharmProjects/openTelemetry/src/opentelemetry-python/.flake8:/opentelemetry-python/.flake8"
 -v "//c/Users/robwk/PycharmProjects/openTelemetry/src/opentelemetry-python/.pylintrc:/opentelemetry-python/.pylintrc"
 opt-dev:full //bin/bash
 

-----------------------------------------
Misc
-----------------------------------------

Local dev zipkin server:
Run:
 - docker run -d -p 9411:9411 openzipkin/zipkin-slim
 - docker run -d -p 9411:9411 openzipkin/zipkin
View:
 - http://localhost:9411/zipkin/


-----------------------------------------
TLS cert generation
-----------------------------------------

docker run -it --rm -v "//c/Users/robwk/PycharmProjects/openTelemetry/docker/util/certs/gen:/root/gen" dev/util/cert-gen:latest

Then use (in cmd prompt, not Cmder): mklink /D certs/gen path/to/symlink_dir
